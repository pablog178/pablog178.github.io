{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["postImage","media","fluid","childImageSharp","style","minWidth","marginLeft","imgStyle","borderRadius","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","map","node","excerpt","fields","slug","frontmatter","date","description","timeToRead","key","boxShadow","to","marginBottom","rhythm","display","alignItems","dangerouslySetInnerHTML","__html","pageQuery"],"mappings":"2FAAA,2JA2DMA,EAAY,SAAAC,GAChB,OAAIA,EAEA,kBAAC,IAAD,CACEC,MAAOD,EAAME,gBAAgBD,MAC7BE,MAAO,CACLC,SAAS,QACTC,WAAW,QAEbC,SAAU,CACRC,aAAa,SAMd,IAGMC,UArEG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAErC,OACE,kBAAC,IAAD,CAAQP,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,kBAAC,IAAD,MACCC,EAAMG,KAAI,YAAe,IAAZC,EAAW,EAAXA,KAAW,EAMnBA,GAAQ,GANW,IAErBC,eAFqB,MAEX,GAFW,MAGrBC,OAAUC,YAHW,MAGJ,WAHI,MAIrBC,YAJqB,IAINC,YAJM,MAIC,GAJD,MAIKV,aAJL,MAIa,GAJb,MAIiBW,mBAJjB,MAI+B,GAJ/B,EAImCzB,EAJnC,EAImCA,MAJnC,EAKrB0B,WAGF,OACE,6BAASC,IAAKR,EAAKE,OAAOC,MACxB,6BACE,gCACE,kBAAC,OAAD,CAAMnB,MAAO,CAAEyB,UAAU,QAAWC,GAAIP,GACtC,wBACEnB,MAAO,CACL2B,aAAcC,YAAO,EAAI,KAG1BjB,GAASQ,IAGd,+BAAQE,IAEV,6BAASrB,MAAO,CAAE6B,QAAQ,OAASC,WAAW,WAC5C,uBACEC,wBAAyB,CACvBC,OAAQV,GAAeL,GAEzBjB,MAAO,CACL2B,aAAc,KAGjB/B,EAAUC,WA+BpB,IAAMoC,EAAS","file":"component---src-pages-index-js-8891b08ea39202dc79b3.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport Image from \"gatsby-image\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      {posts.map(({ node }) => {\n        const {\n          excerpt = \"\",\n          fields: { slug = \"No title\" },\n          frontmatter: { date = \"\", title = \"\", description = \"\", media },\n          timeToRead = 0,\n        } = node || {}\n\n        return (\n          <article key={node.fields.slug}>\n            <div>\n              <header>\n                <Link style={{ boxShadow: `none` }} to={slug}>\n                  <h3\n                    style={{\n                      marginBottom: rhythm(1 / 4),\n                    }}\n                  >\n                    {title || slug}\n                  </h3>\n                </Link>\n                <small>{date}</small>\n              </header>\n              <section style={{ display: `flex`, alignItems: `center` }}>\n                <p\n                  dangerouslySetInnerHTML={{\n                    __html: description || excerpt,\n                  }}\n                  style={{\n                    marginBottom: 0,\n                  }}\n                />\n                {postImage(media)}\n              </section>\n            </div>\n          </article>\n        )\n      })}\n    </Layout>\n  )\n}\n\nconst postImage = media => {\n  if (media) {\n    return (\n      <Image\n        fluid={media.childImageSharp.fluid}\n        style={{\n          minWidth: `100px`,\n          marginLeft: `10px`,\n        }}\n        imgStyle={{\n          borderRadius: `50%`,\n        }}\n      />\n    )\n  }\n\n  return \"\"\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            media {\n              childImageSharp {\n                fluid(maxWidth: 100, quality: 100) {\n                  ...GatsbyImageSharpFluid\n                  ...GatsbyImageSharpFluidLimitPresentationSize\n                }\n              }\n            }\n          }\n          timeToRead\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}